---
apiVersion: v1
data:
  influxdb-password: bE1jdmczSFQzUA==
  influxdb-user: YWRtaW4=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: influxdb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/version: 1.7.9
    helm.sh/chart: influxdb-4.3.0
  name: influxdb-auth
  namespace: influxdb

---
apiVersion: v1
data:
  influxdb.conf: |+
    reporting-disabled = false
    bind-address = ":8088"

    [meta]
      dir = "/var/lib/influxdb/meta"

    [data]
      dir = "/var/lib/influxdb/data"
      wal-dir = "/var/lib/influxdb/wal"

    [coordinator]

    [retention]

    [shard-precreation]

    [monitor]

    [subscriber]

    [http]

    # TODO: allow multiple graphite listeners

    [[graphite]]

    # TODO: allow multiple collectd listeners with templates

    [[collectd]]

    # TODO: allow multiple opentsdb listeners with templates

    [[opentsdb]]

    # TODO: allow multiple udp listeners with templates

    [[udp]]

    [continuous_queries]

    [logging]


kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: influxdb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/version: 1.7.9
    helm.sh/chart: influxdb-4.3.0
  name: influxdb
  namespace: influxdb

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: influxdb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/version: 1.7.9
    helm.sh/chart: influxdb-4.3.0
  name: influxdb
  namespace: influxdb

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: influxdb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/version: 1.7.9
    helm.sh/chart: influxdb-4.3.0
  name: influxdb
  namespace: influxdb
spec:
  ports:
  - name: api
    port: 8086
    targetPort: api
  - name: rpc
    port: 8088
    targetPort: rpc
  selector:
    app.kubernetes.io/instance: influxdb
    app.kubernetes.io/name: influxdb
  type: ClusterIP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: influxdb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/version: 1.7.9
    helm.sh/chart: influxdb-4.3.0
  name: influxdb
  namespace: influxdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: influxdb
      app.kubernetes.io/name: influxdb
  serviceName: influxdb
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: influxdb
        app.kubernetes.io/name: influxdb
    spec:
      containers:
      - image: influxdb:1.7.9-alpine
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: api
          initialDelaySeconds: 30
          timeoutSeconds: 5
        name: influxdb
        ports:
        - containerPort: 8086
          name: api
        readinessProbe:
          httpGet:
            path: /ping
            port: api
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 0.1
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/lib/influxdb
          name: influxdb-data
        - mountPath: /etc/influxdb
          name: config
      serviceAccountName: influxdb
      volumes:
      - configMap:
          name: influxdb
        name: config
  volumeClaimTemplates:
  - metadata:
      annotations: null
      name: influxdb-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi

---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: hook-succeeded
  labels:
    app.kubernetes.io/instance: influxdb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/version: 1.7.9
    helm.sh/chart: influxdb-4.3.0
  name: influxdb-set-auth
  namespace: influxdb
spec:
  activeDeadlineSeconds: null
  backoffLimit: 6
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: influxdb
        app.kubernetes.io/name: influxdb
    spec:
      containers:
      - args:
        - /bin/sh
        - -c
        - |
          curl -X POST http://influxdb:8086/query \
          --data-urlencode \
          "q=CREATE USER \"${INFLUXDB_USER}\" WITH PASSWORD '${INFLUXDB_PASSWORD}' WITH ALL PRIVILEGES"
        env:
        - name: INFLUXDB_USER
          valueFrom:
            secretKeyRef:
              key: influxdb-user
              name: influxdb-auth
        - name: INFLUXDB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: influxdb-password
              name: influxdb-auth
        image: appropriate/curl:latest
        name: influxdb-set-auth
      restartPolicy: OnFailure

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations: null
  labels:
    app.kubernetes.io/instance: influxdb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/version: 1.7.9
    helm.sh/chart: influxdb-4.3.0
  name: influxdb
  namespace: influxdb
spec:
  rules:
  - host: influxdb.datacenterhealth.io
    http:
      paths:
      - backend:
          serviceName: influxdb
          servicePort: 8086
        path: /
  tls:
  - hosts:
    - influxdb.datacenterhealth.io
    secretName: sslcert-datacenterhealth-io
